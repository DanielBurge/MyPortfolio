package keylistener;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JFrame;
import javax.swing.JLabel;

public class MyFrame extends JFrame implements KeyListener {
	JLabel label;
	
	
	MyFrame(){
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setSize(500,500);
		this.setLayout(null);
		this.addKeyListener(this);
		this.setVisible(true);
		
		label = new JLabel();
		label.setBounds(0,0,100,100);
		label.setBackground(Color.red);
		label.setOpaque(true);
		
		this.add(label);
		this.setVisible(true);
	}
	
	
	


	@Override
	public void keyTyped(KeyEvent e) {
		// keyTyped = Invoked when a key is typed.
		switch(e.getKeyChar()) {
			case 'a':label.setLocation(label.getX()-10,label.getY());
			break;
			case 'w':label.setLocation(label.getX()-1,label.getY()-10);
			break;
			case 's':label.setLocation(label.getX()-1,label.getY()+10);
			break;
			case 'd':label.setLocation(label.getX()+10,label.getY());
		}
		
	}


	@Override
	public void keyPressed(KeyEvent e) {
		// keyPressed = Invoked when a physical key is Pressed down.
		
	}


	@Override
	public void keyReleased(KeyEvent e) {
		// keyReleased = called whenever a button is released
		System.out.println("You released key char: " + e.getKeyChar());
		System.out.println("You released key char: " + e.getKeyCode());
	}

}
